# knife4j增强配置
knife4j:
  # 是否开启生产环境保护策略
  production: false

# 数据库连接配置
spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    # druid数据库连接池
    # type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.2.101:3306/darius_dev?characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: darius_dev
    password: darius_dev_dnT9Eb
    hikari:
      # 客户端从连接池等待连接的最大毫秒数
      connection-timeout: 20000
      # 连接池中维护的最小空闲连接数
      minimum-idle: 5
      # 最大连接池数大小
      maximum-pool-size: 20
      # 允许一个连接在连接池中闲置的最大毫秒数
      idle-timeout: 300000
      # 池中连接关闭后的最长生存毫秒数
      max-lifetime: 1200000
      # 从池中返回的连接的默认自动提交行为
      auto-commit: true
    # druid 连接池管理
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      web-stat-filter:
        # 是否启用StatFilter默认值true
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
      stat-view-servlet:
        # 是否启用StatViewServlet默认值true
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台，默认为root
        login-username: druid_dev
        login-password: druid_dev_dnT9Eb
        # IP白名单
        allow: 127.0.0.1
        # IP黑名单（共同存在时，deny优先于allow）
        deny:
# 线程池配置
thread:
  pool:
    # 设置核心线程数
    core-pool-size: 5
    # 设置最大线程数
    max-pool-size: 20
    # 设置缓冲队列大小
    queue-capacity: 100
    # 设置线程的最大空闲秒数
    keep-alive-seconds: 30
    # 是否允许核心线程超时
    allow-core-thread-timeout: true
    # 是否等待剩余任务完成后才关闭应用
    wait-for-tasks-to-complete-on-shutdown: true
    # 等待剩余任务完成的最大秒数
    await-termination-seconds: 60
    # 拒绝策略
    rejected-execution-handler: CallerRunsPolicy

# p6spy配置
decorator:
  datasource:
    enabled: true

# 项目配置
darius:
    # 验证码
    captcha:
      enabled: false
      # 验证码类型
      type: image
      # 图形验证码类型，验证码类型为图形时需配置
      image-type: arithmetic